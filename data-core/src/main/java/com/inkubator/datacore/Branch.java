package com.inkubator.datacore;
// Generated Oct 18, 2013 9:16:14 AM by Hibernate Tools 3.2.1.GA

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import static javax.persistence.CascadeType.MERGE;
import static javax.persistence.CascadeType.PERSIST;
import static javax.persistence.CascadeType.REFRESH;

/**
 * Branch generated by hbm2java
 */
@Entity
@Table(name = "branch", catalog = "user_management", uniqueConstraints =
        @UniqueConstraint(columnNames = "branch_code"))
public class Branch implements java.io.Serializable {

    private long id;
    private Integer version;
    private Branch branch;
    private String branchCode;
    private String branchName;
    private Byte isActive;
    private String cretaedBy;
    private Date createdOn;
    private String updatedBy;
    private Date updatedOn;
    private Long level;
//    private Set<SpiUser> spiUsers = new HashSet<>(0);
    private Set<Branch> branchs = new HashSet<>(0);

    public Branch(String branchName) {
        this.branchName = branchName;
    }

    public Branch() {
    }

    public Branch(long id) {
        this.id = id;
    }

//    public Branch(long id, Branch branch, String branchCode, String branchName, Byte isActive, String cretaedBy, Date createdOn, String updatedBy, Date updatedOn, Set<SpiUser> spiUsers, Set<Branch> branchs) {
//        this.id = id;
//        this.branch = branch;
//        this.branchCode = branchCode;
//        this.branchName = branchName;
//        this.isActive = isActive;
//        this.cretaedBy = cretaedBy;
//        this.createdOn = createdOn;
//        this.updatedBy = updatedBy;
//        this.updatedOn = updatedOn;
//        this.spiUsers = spiUsers;
//        this.branchs = branchs;
//    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "parent_id")
    public Branch getBranch() {
        return this.branch;
    }

    public void setBranch(Branch branch) {
        this.branch = branch;
    }

    @Column(name = "branch_code", unique = true, length = 100)
    public String getBranchCode() {
        return this.branchCode;
    }

    public void setBranchCode(String branchCode) {
        this.branchCode = branchCode;
    }

    @Column(name = "branch_name")
    public String getBranchName() {
        return this.branchName;
    }

    public void setBranchName(String branchName) {
        this.branchName = branchName;
    }

    @Column(name = "is_active")
    public Byte getIsActive() {
        return this.isActive;
    }

    public void setIsActive(Byte isActive) {
        this.isActive = isActive;
    }

    @Column(name = "cretaed_by", length = 45)
    public String getCretaedBy() {
        return this.cretaedBy;
    }

    public void setCretaedBy(String cretaedBy) {
        this.cretaedBy = cretaedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_on", length = 19)
    public Date getCreatedOn() {
        return this.createdOn;
    }

    public void setCreatedOn(Date createdOn) {
        this.createdOn = createdOn;
    }

    @Column(name = "updated_by", length = 45)
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated_on", length = 19)
    public Date getUpdatedOn() {
        return this.updatedOn;
    }

    public void setUpdatedOn(Date updatedOn) {
        this.updatedOn = updatedOn;
    }

//    @OneToMany(cascade = {MERGE,PERSIST,REFRESH}, fetch = FetchType.LAZY, mappedBy = "branch")
//    public Set<SpiUser> getSpiUsers() {
//        return this.spiUsers;
//    }
//
//    public void setSpiUsers(Set<SpiUser> spiUsers) {
//        this.spiUsers = spiUsers;
//    }

    public void setActive(Byte active) {
        isActive = active;
    }

    public Long getLevel() {
        return level;
    }

    public void setLevel(Long level) {
        this.level = level;
    }

    @OneToMany(cascade = {CascadeType.MERGE,CascadeType.PERSIST}, fetch = FetchType.LAZY, mappedBy = "branch")
    public Set<Branch> getBranchs() {
        return this.branchs;
    }

    public void setBranchs(Set<Branch> branchs) {
        this.branchs = branchs;
    }

    @Transient
    public String getActive() {
        if (getIsActive() == Byte.MAX_VALUE) {
            return "Y";
        } else {
            return "N";
        }
    }
}
